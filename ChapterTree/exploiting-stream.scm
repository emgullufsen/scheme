(define (stream-limit-protected in-stream tolerance n)
  (if (< n 1)
      (error "lim exceeded")
      (let* ((scar (stream-car in-stream)) (scdr (stream-car (stream-cdr in-stream))) (tolly (abs (- scar scdr))))
	(if (< tolly tolerance)
	    scdr
	    (stream-limit-protected (stream-cdr in-stream) tolerance (- n 1))))))

(define (stream-limit in-stream tolerance)
  (stream-limit-protected in-stream tolerance 5000))

(define (sqrt-improve guess x)
  (average guess (/ x guess)))

(define (sqrt-stream x)
  (define guesses
    (cons-stream 
     1.0 (stream-map
          (lambda (guess)
            (sqrt-improve guess x))
          guesses)))
  guesses)
